finFeatList <- finFeatList[-c(6,7)]
finFeatList
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
finFeatList <- finFeatList[-c(7,8)]
finFeatList
py <- plotly()
plot_list <- list()
for(i in 1:27){
plot_list[[i]] <- list(
x = c(0:6),
y = c(as.data.frame(irf_fit$irf[22])[,i]),
name = names(finFeatList[i]),
line = list(width = 2),
type = "bar"
)
}
layout <- list(
title = paste0(finFeatList[22], ' - Impulse Response Function'),
font = list(size = 12),
showlegend = TRUE,
autosize = TRUE,
width = 1368,
height = 745,
barmode = "stack",
xaxis = list(
title = "Month (s)",
range = c(0, 6),
type = "linear",
autorange = TRUE
),
yaxis = list(
title = "Unit Change",
range = c(-1, 1),
type = "linear",
autorange = TRUE
)
)
response <- py$plotly(plot_list, kwargs=list(layout=layout))
response$url
irf_fit$irf[22]
dim(irf_fit$irf[22])
finFeatList[i]
finFeatList
dim(finFeatList[i])
length(finFeatList[i])
length(finFeatList[26])
finFeatList[26]
finFeatList[25]
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
library(plotly)
set_credentials_file("ivan.liu", "7lne8mnymc")
py <- plotly()
plot_list <- list()
for(i in 1:27){
plot_list[[i]] <- list(
x = c(0:6),
y = c(as.data.frame(irf_fit$irf[22])[,i]),
name = names(finFeatList[i]),
line = list(width = 2),
type = "bar"
)
}
layout <- list(
title = paste0(finFeatList[22], ' - Impulse Response Function'),
font = list(size = 12),
showlegend = TRUE,
autosize = TRUE,
width = 1368,
height = 745,
barmode = "stack",
xaxis = list(
title = "Month (s)",
range = c(0, 6),
type = "linear",
autorange = TRUE
),
yaxis = list(
title = "Unit Change",
range = c(-1, 1),
type = "linear",
autorange = TRUE
)
)
response <- py$plotly(plot_list, kwargs=list(layout=layout))
response$url
py <- plotly()
plot_list <- list()
for(i in 1:27){
plot_list[[i]] <- list(
x = c(0:6),
y = c(as.data.frame(irf_fit$irf[22])[,i]),
name = names(finFeatList[i]),
line = list(width = 2),
type = "bar"
)
}
layout <- list(
title = paste0(finFeatList[22], ' - Impulse Response Function'),
font = list(size = 12),
showlegend = TRUE,
autosize = TRUE,
width = 1368,
height = 745,
barmode = "group",
xaxis = list(
title = "Month (s)",
range = c(0, 6),
type = "linear",
autorange = TRUE
),
yaxis = list(
title = "Unit Change",
range = c(-1, 1),
type = "linear",
autorange = TRUE
)
)
response <- py$plotly(plot_list, kwargs=list(layout=layout))
response$url
py <- plotly()
plot_list <- list()
for(i in 1:27){
plot_list[[i]] <- list(
x = c(0:6),
y = c(as.data.frame(irf_fit$irf[22])[,i]),
name = names(finFeatList[i]),
line = list(width = 2),
type = "scatter"
)
}
layout <- list(
title = paste0(finFeatList[22], ' - Impulse Response Function'),
font = list(size = 12),
showlegend = TRUE,
autosize = TRUE,
width = 1368,
height = 745,
#barmode = "group",
xaxis = list(
title = "Month (s)",
range = c(0, 6),
type = "linear",
autorange = TRUE
),
yaxis = list(
title = "Unit Change",
range = c(-1, 1),
type = "linear",
autorange = TRUE
)
)
response <- py$plotly(plot_list, kwargs=list(layout=layout))
response$url
fit <- VAR(dt, p=4, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
py <- plotly()
plot_list <- list()
for(i in 1:27){
plot_list[[i]] <- list(
x = c(0:24),
y = c(as.data.frame(irf_fit$irf[22])[,i]),
name = names(finFeatList[i]),
line = list(width = 2),
type = "bar"
)
}
layout <- list(
title = paste0(finFeatList[22], ' - Impulse Response Function'),
font = list(size = 12),
showlegend = TRUE,
autosize = TRUE,
width = 1368,
height = 745,
barmode = "stack",
xaxis = list(
title = "Month (s)",
range = c(0, 24),
type = "linear",
autorange = TRUE
),
yaxis = list(
title = "Unit Change",
range = c(-1, 1),
type = "linear",
autorange = TRUE
)
)
response <- py$plotly(plot_list, kwargs=list(layout=layout))
response$url
py <- plotly()
plot_list <- list()
for(i in 1:27){
plot_list[[i]] <- list(
x = c(0:24),
y = c(as.data.frame(irf_fit$irf[22])[,i]),
name = names(finFeatList[i]),
line = list(width = 2),
type = "bar"
)
}
layout <- list(
title = paste0(finFeatList[22], ' - Impulse Response Function'),
font = list(size = 12),
showlegend = TRUE,
autosize = TRUE,
width = 1368,
height = 745,
barmode = "stack",
xaxis = list(
title = "Month (s)",
range = c(-1, 24),
type = "linear",
autorange = TRUE
),
yaxis = list(
title = "Unit Change",
range = c(-1, 1),
type = "linear",
autorange = TRUE
)
)
response <- py$plotly(plot_list, kwargs=list(layout=layout))
response$url
irf_fit <- irf(fit, n.ahead=24, ortho=F, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
irf_fit
response$url
py <- plotly()
plot_list <- list()
for(i in 1:27){
plot_list[[i]] <- list(
x = c(0:24),
y = c(as.data.frame(irf_fit$irf[22])[,i]),
name = names(finFeatList[i]),
line = list(width = 2),
type = "bar"
)
}
layout <- list(
title = paste0(finFeatList[22], ' - Impulse Response Function'),
font = list(size = 12),
showlegend = TRUE,
autosize = TRUE,
width = 1368,
height = 745,
barmode = "stack",
xaxis = list(
title = "Month (s)",
range = c(-1, 24),
type = "linear",
autorange = TRUE
),
yaxis = list(
title = "Unit Change",
range = c(-1, 1),
type = "linear",
autorange = TRUE
)
)
response <- py$plotly(plot_list, kwargs=list(layout=layout))
response$url
setwd('/Users/ivanliu/Google Drive/ANZ/Multivariate Time Series/Auto_v1.4/R')
rm(list=ls());gc()
require(data.table);require(forecast);require(caret);require(bit64);library(vars)
dt <- fread('../data/Auto_Sector_Growth.csv', data.table=F, na.strings = '')
timeLine <- dt[,'Date']
dt[,1] <- NULL;# 1994/04/01
dt <- dt[,c(1:18,20:29,19)]
rawNames <- colnames(dt);newNames <- c(paste0('Var_', 1:(ncol(dt)-1)), 'Target')
nullRate <- apply(dt,2, function(x) mean(is.na(x)))
featMapping <- cbind(rawNames, newNames, nullRate)
colnames(dt) <- newNames
freq <- 12
dt <- ts(dt, freq=freq, start = c(1994,4))
for(i in 1:ncol(dt)){
dt[which(dt[,i]==0),i] <- NA
dt[,i] <- na.interp(dt[,i], lambda = NULL)
}
dt
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
finFeatList
finFeatList
finFeatList
featMapping[which(featMapping[,2] %in% colnames(dt)),]
period = 24
dt
fit_select <- VARselect(dt, lag.max=12, type='both')
fit_select <- VARselect(dt, lag.max=12, type='both');fit_select$selection
fit_select <- VARselect(dt, lag.max=12, type='both');fit_select
fit <- VAR(dt, p=8, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
fit
irf_fit <- irf(fit, n.ahead=24, ortho=F, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
library(plotly)
set_credentials_file("ivan.liu", "7lne8mnymc")
py <- plotly()
plot_list <- list()
for(i in 1:27){
plot_list[[i]] <- list(
x = c(0:24),y = c(as.data.frame(irf_fit$irf[22])[,i]),
name = names(finFeatList[i]),line = list(width = 2),type = "bar")
}
layout <- list(
title = paste0(finFeatList[22], ' - Impulse Response Function'),
font = list(size = 12), showlegend = TRUE, autosize = TRUE,
width = 1368, height = 745, barmode = "stack",
xaxis = list(
title = "Month (s)", range = c(-1, 24),
type = "linear", autorange = TRUE
),
yaxis = list(
title = "Unit Change", range = c(-1, 1),
type = "linear", autorange = TRUE
)
)
response <- py$plotly(plot_list, kwargs=list(layout=layout))
response$url
finFeatList
featMapping
fit_select <- VARselect(dt[c(24,29)], lag.max=12, type='both');fit_select
fit_select <- VARselect(dt[,c(24,29)], lag.max=12, type='both');fit_select
fit_select <- VARselect(dt[,c(24,29)], lag.max=24, type='both');fit_select
fit_select <- VARselect(dt[,c(24,29)], lag.max=24, type='both');fit_select$selection
fit_select <- VARselect(dt[,c(24,29)], lag.max=12, type='both');fit_select$selection
fit <- VAR(dt[,c(24,29)], p=1, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
fit
irf_fit <- irf(fit, n.ahead=24, ortho=F, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
irf_fit
plot(irf_fit)
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
plot(irf_fit)
plot(irf_fit)
irf_fit
causality(fit)
causality(fit, cause = 'Var_24', boot = T, boot.runs = 100)
causality(fit, cause = 'Target', boot = T, boot.runs = 100)
fit_select <- VARselect(dt[,c(24,29)], lag.max=24, type='both');fit_select$selection
plot(irf_fit)
fit_select <- VARselect(dt[,c(24,25,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(24,25,29)], p=fit_select$selection, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
fit <- VAR(dt[,c(24,25,29)], p=1, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
causality(fit, cause = 'Target', boot = T, boot.runs = 100)
causality(fit, cause = 'Var_24', boot = T, boot.runs = 100)
causality(fit, cause = 'Var_25', boot = T, boot.runs = 100)
fit_select <- VARselect(dt[,c(24,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(24,29)], p=1, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
causality(fit, cause = 'Var_24', boot = T, boot.runs = 100)
causality(fit, cause = 'Target', boot = T, boot.runs = 100)
causality(fit, cause = 'Target', boot = F, boot.runs = 100)
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
plot(irf_fit)
par(mfcol=c(2,1));plot(irf_fit)
par(mfcol=c(2,2))
par(mfcol=c(2,2));plot(irf_fit)
irf_fit$model
irf_fit$boot
irf_fit$ortho
irf_fit[[1]]
irf_fit[[2]]
irf_fit[[3]]
irf_fit[[4]]
irf_fit$Target
par(mfcol=c(1,1));plot(irf_fit)
featMapping
fit_select <- VARselect(dt[,c(19,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(19,29)], p=2, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
causality(fit, cause = 'Target', boot = F, boot.runs = 100)
causality(fit, cause = c('Var_19','Target'), boot = F, boot.runs = 100)
causality(fit, cause = 'Var_19', boot = F, boot.runs = 100)
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
par(mfcol=c(1,1));plot(irf_fit)
irf_fit <- irf(fit, n.ahead=24, ortho=F, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
par(mfcol=c(1,1));plot(irf_fit)
dt <- fread('../data/Auto_Sector.csv', data.table=F, na.strings = '')
timeLine <- dt[,'Date']
dt[,1] <- NULL;dt <- dt[,c(1:18,20:29,19)]
rawNames <- colnames(dt);newNames <- c(paste0('Var_', 1:(ncol(dt)-1)), 'Target')
nullRate <- apply(dt,2, function(x) mean(is.na(x)))
featMapping <- cbind(rawNames, newNames, nullRate)
colnames(dt) <- newNames
### Pre-processing ###
freq <- 12
dt <- ts(dt, freq=freq, start = c(1994,4))
for(i in 1:ncol(dt)){
dt[which(dt[,i]==0),i] <- NA
dt[,i] <- na.interp(dt[,i], lambda = NULL)
}
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
dt <- diff(dt, 1)
period = 24
fit_select <- VARselect(dt[,c(19,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(19,29)], p=2, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
causality(fit, cause = 'Var_19', boot = F, boot.runs = 100)
irf_fit <- irf(fit, n.ahead=24, ortho=F, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
par(mfcol=c(1,1));plot(irf_fit)
causality(fit, cause = 'Var_19', boot = T, boot.runs = 100)
causality(fit, cause = 'Var_19', boot = F, boot.runs = 100)
fit_select <- VARselect(dt[,c(24,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(24,29)], p=1, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
causality(fit, cause = 'Var_19', boot = F, boot.runs = 100)
causality(fit, cause = 'Var_24', boot = F, boot.runs = 100)
dt <- fread('../data/Auto_Sector_Growth.csv', data.table=F, na.strings = '')
setwd('/Users/ivanliu/Google Drive/ANZ/Multivariate Time Series/Auto_v1.4/R')
rm(list=ls());gc()
require(data.table);require(forecast);require(caret);require(bit64);library(vars)
dt <- fread('../data/Auto_Sector_Growth.csv', data.table=F, na.strings = '')
### Convert Data ###
timeLine <- dt[,'Date']
dt[,1] <- NULL;dt <- dt[,c(1:18,20:29,19)]
rawNames <- colnames(dt);newNames <- c(paste0('Var_', 1:(ncol(dt)-1)), 'Target')
nullRate <- apply(dt,2, function(x) mean(is.na(x)))
featMapping <- cbind(rawNames, newNames, nullRate)
colnames(dt) <- newNames
### Pre-processing ###
freq <- 12
dt <- ts(dt, freq=freq, start = c(1994,4))
for(i in 1:ncol(dt)){
dt[which(dt[,i]==0),i] <- NA
dt[,i] <- na.interp(dt[,i], lambda = NULL)
}
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
### VAR Modeling ###
# dt <- diff(dt, 1)
period = 24
fit_select <- VARselect(dt[,c(24,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(24,29)], p=1, type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
causality(fit, cause = 'Var_24', boot = F, boot.runs = 100)
causality(fit, cause = 'Var_24', boot = T, boot.runs = 100)
causality(fit, cause = 'Var_24', boot = T, boot.runs = 10)
causality(fit, cause = 'Var_24', boot = T, boot.runs = 1000)
causality(fit, cause = 'Var_24')
causality(fit, cause = 'Var_24')
irf_fit <- irf(fit, n.ahead=24, ortho=F, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
par(mfcol=c(1,1));plot(irf_fit)
cause <- causality(fit, cause = 'Var_24')
cause$Granger
cause$Instant
cause$Instant$statistic
cause$Instant$p.value
fit_select <- VARselect(dt[,c(24,29)], lag.max=24, type='both');fit_select$selection
fit_select$selection[1]
mean(fit_select$selection)
floor(mean(fit_select$selection))
fit_select <- VARselect(dt[,c(24,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(24,29)], p=floor(mean(fit_select$selection)), type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
fit
plot(irf_fit)
irf_fit <- irf(fit, n.ahead=24, ortho=F, cumulative=F, boot=F, ci=.95, runs=100, seed=8)
par(mfcol=c(1,1));plot(irf_fit)
irf_fit <- irf(fit, n.ahead=24, ortho=F, cumulative=T, boot=T, ci=.95, runs=100, seed=8)
par(mfcol=c(1,1));plot(irf_fit)
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=1000, seed=8)
par(mfcol=c(1,1));plot(irf_fit)
jpeg(paste0('irf.jpg'),width=600, height=400)
plot(irf_fit)
i=1
fit_select <- VARselect(dt[,c(i,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(i,29)], p=floor(mean(fit_select$selection)), type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
fit
cause <- causality(fit, cause = 'Target')
cause
cause$Granger
cause$Instant$p.value
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
plot(irf_fit)
fit <- VAR(dt[,c(i,29)], p=floor(mean(fit_select$selection)), type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
plot(irf_fit)
causality(fit, cause = 'Target')
colnames(dt[,c(29)])
names(dt[,c(29)])
dt[,c(29)]
names(dt[,c(i,29)])
colnames(dt[,c(i,29)])
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[1])
cause
period
irf_mt <- matrix(nrow = 28, ncol = 6)
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[1]) #Var_1 do not Granger-cause Target
irf_mt[i,1] <- colnames(dt[,c(i,29)])[2]; irf_mt[i,2] <- colnames(dt[,c(i,29)])[1]
irf_mt[i,3] <- cause$Granger$p.value; irf_mt[i,4] <- cause$Instant$p.value
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[2]) #Target do not Granger-cause Var_1
irf_mt[i,3] <- cause$Granger$p.value; irf_mt[i,4] <- cause$Instant$p.value
irf_mt
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[2]) #Target do not Granger-cause Var_1
cause
colnames(dt[,c(i,29)])[2]
fit_select <- VARselect(dt[,c(i,29)], lag.max=24, type='both');fit_select$selection
fit <- VAR(dt[,c(i,29)], p=floor(mean(fit_select$selection)), type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[1]) #Var_1 do not Granger-cause Target
irf_mt[i,1] <- colnames(dt[,c(i,29)])[2]; irf_mt[i,2] <- colnames(dt[,c(i,29)])[1]
irf_mt[i,3] <- cause$Granger$p.value; irf_mt[i,4] <- cause$Instant$p.value
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[2]) #Target do not Granger-cause Var_1
irf_mt[i,5] <- cause$Granger$p.value; irf_mt[i,6] <- cause$Instant$p.value
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
plot(irf_fit)
fit_select <- VARselect(dt[,c(i,29)], lag.max=12, type='both');fit_select$selection
fit <- VAR(dt[,c(i,29)], p=floor(mean(fit_select$selection)), type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[1]) #Var_1 do not Granger-cause Target
irf_mt[i,1] <- colnames(dt[,c(i,29)])[2]; irf_mt[i,2] <- colnames(dt[,c(i,29)])[1]
irf_mt[i,3] <- cause$Granger$p.value; irf_mt[i,4] <- cause$Instant$p.value
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[2]) #Target do not Granger-cause Var_1
irf_mt[i,5] <- cause$Granger$p.value; irf_mt[i,6] <- cause$Instant$p.value
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
plot(irf_fit)
i=24
fit_select <- VARselect(dt[,c(i,29)], lag.max=12, type='both');fit_select$selection
fit <- VAR(dt[,c(i,29)], p=floor(mean(fit_select$selection)), type='both', season=NULL, ic=c("AIC", "HQ", "SC", "FPE"))
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[1]) #Var_1 do not Granger-cause Target
irf_mt[i,1] <- colnames(dt[,c(i,29)])[2]; irf_mt[i,2] <- colnames(dt[,c(i,29)])[1]
irf_mt[i,3] <- cause$Granger$p.value; irf_mt[i,4] <- cause$Instant$p.value
cause <- causality(fit, cause = colnames(dt[,c(i,29)])[2]) #Target do not Granger-cause Var_1
irf_mt[i,5] <- cause$Granger$p.value; irf_mt[i,6] <- cause$Instant$p.value
irf_fit <- irf(fit, n.ahead=24, ortho=T, cumulative=F, boot=T, ci=.95, runs=100, seed=8)
plot(irf_fit)
