period = 60
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
### models ###
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
for(i in 1:(ncol(dt)-1)){
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
jpeg(paste0('../Image/Forecasting_Predictors_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
Error[i,1] <- finFeatList[i]
Error[i,2] <- mean(abs(p$mean - dt[test,i])/dt[test,i])*100
Error[i,3] <- mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/dt[test,i])*100
Error[i,4] <- mean(abs(apply(cbind(apply(cbind(p$upper[,2]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,2], 0),1,min)),1,min))/dt[test,i])*100
}
i <- 29
fit <- auto.arima(dt[train,29], xreg = dt[train,-c(7,8,27,29)], stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period, xreg=dt[test,-c(7,8,27,29)])
jpeg(paste0('../Image/Forecasting_Target_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
Error[i,1] <- finFeatList[i]
Error[i,2] <- mean(abs(p$mean - dt[test,i])/dt[test,i])*100
Error[i,3] <- mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/dt[test,i])*100
Error[i,4] <- mean(abs(apply(cbind(apply(cbind(p$upper[,2]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,2], 0),1,min)),1,min))/dt[test,i])*100
write.csv(Error, file='../Document/Prediction_Error.csv', row.names = F)
Error
cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0)
)
)
cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min))
apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min)
abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))
abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/dt[test,i]
mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/dt[test,i])*100
i=8
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
Error[i,1] <- finFeatList[i]
p$mean - dt[test,i]
abs(p$mean - dt[test,i])
abs(p$mean - dt[test,i])/dt[test,i]
abs(p$mean - dt[test,i])/abs(dt[test,i])
mean(abs(p$mean - dt[test,i])/abs(dt[test,i]))*100
(p$mean - dt[test,i])/dt[test,i]
mean(abs((p$mean - dt[test,i])/dt[test,i]))*100
setwd('/Users/ivanliu/Google Drive/ANZ/Multivariate Time Series/Auto_v1.2/R')
rm(list=ls());gc();source('pairs.r')
require(data.table);require(forecast);require(caret);require(bit64)
dt <- fread('../data/Auto_Sector.csv', data.table=F, na.strings = '')
####################
### Convert Data ###
####################
timeLine <- dt[,'Date']
dt[,1] <- NULL# 1994/04/01
dt <- dt[,c(1:18,20:29,19)]
rawNames <- colnames(dt);newNames <- c(paste0('Var_', 1:(ncol(dt)-1)), 'Target')
nullRate <- apply(dt,2, function(x) mean(is.na(x)))
featMapping <- cbind(rawNames, newNames, nullRate)
write.csv(featMapping, file='../Document/Feature_Mapping.csv')
colnames(dt) <- newNames
######################
### Pre-processing ###
######################
### 0. Remove 0 values and impute with predicted trend data
freq <- 12
dt <- ts(dt, freq=freq, start = c(1994,4))
for(i in 1:ncol(dt)){
dt[which(dt[,i]==0),i] <- NA
dt[,i] <- na.interp(dt[,i], lambda = NULL)
}
################################
### Time Series for Features ###
################################
### parameter ###
period = 60
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
### models ###
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
for(i in 1:(ncol(dt)-1)){
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
jpeg(paste0('../Image/Forecasting_Predictors_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
Error[i,1] <- finFeatList[i]
Error[i,2] <- mean(abs(p$mean - dt[test,i])/abs(dt[test,i]))*100
Error[i,3] <- mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/abs(dt[test,i]))*100
Error[i,4] <- mean(abs(apply(cbind(apply(cbind(p$upper[,2]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,2], 0),1,min)),1,min))/abs(dt[test,i]))*100
}
i <- 29
fit <- auto.arima(dt[train,29], xreg = dt[train,-c(7,8,27,29)], stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period, xreg=dt[test,-c(7,8,27,29)])
jpeg(paste0('../Image/Forecasting_Target_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
Error[i,1] <- finFeatList[i]
Error[i,2] <- mean(abs(p$mean - dt[test,i])/abs(dt[test,i]))*100
Error[i,3] <- mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/abs(dt[test,i]))*100
Error[i,4] <- mean(abs(apply(cbind(apply(cbind(p$upper[,2]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,2], 0),1,min)),1,min))/abs(dt[test,i]))*100
Error
write.csv(Error, file='../Document/Prediction_Error.csv', row.names = F)
train
i <- 1
fit <- auto.arima(dt[,i],seasonal = T)#, stepwise=FALSE, approximation=FALSE)#
fit
i=2
fit <- auto.arima(dt[,i],seasonal = T)#, stepwise=FALSE, approximation=FALSE)#
fit
i=3
auto.arima(dt[,i],seasonal = T)
i=4
auto.arima(dt[,i],seasonal = T)
i=5
auto.arima(dt[,i],seasonal = T)
i=6
auto.arima(dt[,i],seasonal = T)
i=7
auto.arima(dt[,i],seasonal = T)
i=8
auto.arima(dt[,i],seasonal = T)
i=9
auto.arima(dt[,i],seasonal = T)
i=10
auto.arima(dt[,i],seasonal = T)
i=11
auto.arima(dt[,i],seasonal = T)
i=12
auto.arima(dt[,i],seasonal = T)
i=13
auto.arima(dt[,i],seasonal = T)
i=14
auto.arima(dt[,i],seasonal = T)
i=15
auto.arima(dt[,i],seasonal = T)
i=16
auto.arima(dt[,i],seasonal = T)
i=17
auto.arima(dt[,i],seasonal = T)
i=18
auto.arima(dt[,i],seasonal = T)
i=19
auto.arima(dt[,i],seasonal = T)
i=20
auto.arima(dt[,i],seasonal = T)
i=21
auto.arima(dt[,i],seasonal = T)
i=22
auto.arima(dt[,i],seasonal = T)
i=23
auto.arima(dt[,i],seasonal = T)
i=24
auto.arima(dt[,i],seasonal = T)
i=25
auto.arima(dt[,i],seasonal = T)
i=26
auto.arima(dt[,i],seasonal = T)
i=27
auto.arima(dt[,i],seasonal = T)
i=28
auto.arima(dt[,i],seasonal = T)
i=29
auto.arima(dt[,i],seasonal = T)
fit <- auto.arima(dt[,29], xreg = dt[,-29], stepwise=FALSE, approximation=FALSE)#
fit
fit$coef
names(fit$coef)
cbind(names(fit$coef), fit$coef)
write.csv(fit$coef, file='../Document/Fit_Coef.csv', row.names = T)
dim(dt)
head(dt)
head(dt[,2])
plot(dt)
plot(dt[,1:10])
finFeatList[7]
finFeatList[8]
finFeatList[9:10]
finFeatList[1:10]
names(finFeatList[1:10])
dt <- fread('../data/Auto_Sector_Growth.csv', data.table=F, na.strings = '')
dt
ls
ls()
p
ls()
train
Error
period = 160
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
i=1
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
dt[train,i]
dt
setwd('/Users/ivanliu/Google Drive/ANZ/Multivariate Time Series/Auto_v1.3/R')
rm(list=ls());gc();source('pairs.r')
require(data.table);require(forecast);require(caret);require(bit64)
dt <- fread('../data/Auto_Sector.csv', data.table=F, na.strings = '')
####################
### Convert Data ###
####################
timeLine <- dt[,'Date']
dt[,1] <- NULL# 1994/04/01
dt <- dt[,c(1:18,20:29,19)]
rawNames <- colnames(dt);newNames <- c(paste0('Var_', 1:(ncol(dt)-1)), 'Target')
nullRate <- apply(dt,2, function(x) mean(is.na(x)))
featMapping <- cbind(rawNames, newNames, nullRate)
write.csv(featMapping, file='../Document/Feature_Mapping.csv')
colnames(dt) <- newNames
freq <- 12
dt <- ts(dt, freq=freq, start = c(1994,4))
for(i in 1:ncol(dt)){
dt[which(dt[,i]==0),i] <- NA
dt[,i] <- na.interp(dt[,i], lambda = NULL)
}
period = 160
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
i=1
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
fit
p
p <- forecast(fit, h=period)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
i=29
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
fit
i = 18
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
i =5
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
period = 36
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
fit <- auto.arima(dt[train,i],seasonal = T, stepwise=FALSE, approximation=FALSE)#
fit
fit2 <- stl(dt[train,i], s.window = 'periodic')
dt[train,i]
dt[,i]
fit2 <- stl(ts(dt[train,i], freq=freq, start = c(1994,4)), s.window = 'periodic')
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
fit <- auto.arima(ts(dt[train,i], freq=freq, start = c(1994,4)),seasonal = T, stepwise=FALSE, approximation=FALSE)#
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
fit
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
ts(dt[train,i], freq=freq, start = c(1994,4))
fit <- auto.arima(ts(dt[train,i], freq=freq, start = c(1994,4)),seasonal = T)#, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
fit <- auto.arima(ts(dt[train,i], freq=freq, start = c(1994,4)),seasonal = T, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
i <- 29
fit <- auto.arima(ts(dt[train,29], freq=freq, start = c(1994,4)), xreg = ts(dt[train,-c(7,8,27,29)], freq=freq, start = c(1994,4)), stepwise=FALSE, approximation=FALSE)#
fit
p <- forecast(fit, h=period, xreg=ts(dt[test,-c(7,8,27,29)], freq=freq, start = c(1994,4)))
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
period = 60
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
fit <- auto.arima(ts(dt[train,29], freq=freq, start = c(1994,4)), xreg = ts(dt[train,-c(7,8,27,29)], freq=freq, start = c(1994,4)))#, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period, xreg=ts(dt[test,-c(7,8,27,29)], freq=freq, start = c(1994,4)))
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
fit <- auto.arima(ts(dt[train,29], freq=freq, start = c(1994,4)), xreg = ts(dt[train,-c(29)], freq=freq, start = c(1994,4)))#, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period, xreg=ts(dt[test,-c(29)], freq=freq, start = c(1994,4)))
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
fit
setwd('/Users/ivanliu/Google Drive/ANZ/Multivariate Time Series/Auto_v1.3/R')
rm(list=ls());gc();source('pairs.r')
require(data.table);require(forecast);require(caret);require(bit64)
dt <- fread('../data/Auto_Sector.csv', data.table=F, na.strings = '')
####################
### Convert Data ###
####################
timeLine <- dt[,'Date']
dt[,1] <- NULL# 1994/04/01
dt <- dt[,c(1:18,20:29,19)]
rawNames <- colnames(dt);newNames <- c(paste0('Var_', 1:(ncol(dt)-1)), 'Target')
nullRate <- apply(dt,2, function(x) mean(is.na(x)))
featMapping <- cbind(rawNames, newNames, nullRate)
write.csv(featMapping, file='../Document/Feature_Mapping.csv')
colnames(dt) <- newNames
######################
### Pre-processing ###
######################
### 0. Remove 0 values and impute with predicted trend data
freq <- 12
dt <- ts(dt, freq=freq, start = c(1994,4))
for(i in 1:ncol(dt)){
dt[which(dt[,i]==0),i] <- NA
dt[,i] <- na.interp(dt[,i], lambda = NULL)
}
################################
### Time Series for Features ###
################################
### parameter ###
period = 60
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
### models ###
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
for(i in 1:(ncol(dt)-1)){
fit <- auto.arima(ts(dt[train,i], freq=freq, start = c(1994,4)),seasonal = T)#, stepwise=FALSE, approximation=FALSE)#
# fit2 <- stl(ts(dt[train,i], freq=freq, start = c(1994,4)), s.window = 'periodic')
p <- forecast(fit, h=period)
jpeg(paste0('../Image/Forecasting_Predictors_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
Error[i,1] <- finFeatList[i]
Error[i,2] <- mean(abs(p$mean - dt[test,i])/abs(dt[test,i]))*100
Error[i,3] <- mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/abs(dt[test,i]))*100
Error[i,4] <- mean(abs(apply(cbind(apply(cbind(p$upper[,2]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,2], 0),1,min)),1,min))/abs(dt[test,i]))*100
}
i <- 29
fit <- auto.arima(ts(dt[train,29], freq=freq, start = c(1994,4)), xreg = ts(dt[train,-c(29)], freq=freq, start = c(1994,4)))#, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period, xreg=ts(dt[test,-c(29)], freq=freq, start = c(1994,4)))
jpeg(paste0('../Image/Forecasting_Target_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
Error[i,1] <- finFeatList[i]
Error[i,2] <- mean(abs(p$mean - dt[test,i])/abs(dt[test,i]))*100
Error[i,3] <- mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/abs(dt[test,i]))*100
Error[i,4] <- mean(abs(apply(cbind(apply(cbind(p$upper[,2]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,2], 0),1,min)),1,min))/abs(dt[test,i]))*100
write.csv(Error, file='../Document/Prediction_Error.csv', row.names = F)
setwd('/Users/ivanliu/Google Drive/ANZ/Multivariate Time Series/Auto_v1.3/R')
rm(list=ls());gc();source('pairs.r')
require(data.table);require(forecast);require(caret);require(bit64)
dt <- fread('../data/Auto_Sector.csv', data.table=F, na.strings = '')
####################
### Convert Data ###
####################
timeLine <- dt[,'Date']
dt[,1] <- NULL# 1994/04/01
dt <- dt[,c(1:18,20:29,19)]
rawNames <- colnames(dt);newNames <- c(paste0('Var_', 1:(ncol(dt)-1)), 'Target')
nullRate <- apply(dt,2, function(x) mean(is.na(x)))
featMapping <- cbind(rawNames, newNames, nullRate)
write.csv(featMapping, file='../Document/Feature_Mapping.csv')
colnames(dt) <- newNames
######################
### Pre-processing ###
######################
### 0. Remove 0 values and impute with predicted trend data
freq <- 12
dt <- ts(dt, freq=freq, start = c(1994,4))
for(i in 1:ncol(dt)){
dt[which(dt[,i]==0),i] <- NA
dt[,i] <- na.interp(dt[,i], lambda = NULL)
}
################################
### Time Series for Features ###
################################
### parameter ###
period = 60
train = 1:(nrow(dt)-period)
test = (nrow(dt)-period+1):nrow(dt)
### models ###
Error <- matrix(nrow = ncol(dt), ncol = 4, dimnames = list(NULL, c('Features','MeanError','80Error','95Error')))
finFeatList <- featMapping[which(featMapping[,2] %in% colnames(dt)),][,1]
for(i in 1:(ncol(dt)-1)){
fit <- auto.arima(ts(dt[train,i], freq=freq, start = c(1994,4)),seasonal = T, stepwise=FALSE, approximation=FALSE)#
# fit2 <- stl(ts(dt[train,i], freq=freq, start = c(1994,4)), s.window = 'periodic')
p <- forecast(fit, h=period)
jpeg(paste0('../Image/Forecasting_Predictors_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = paste0(finFeatList[i],' | Null Value: ',as.numeric(featMapping[i,3])*100, '%'),ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
Error[i,1] <- finFeatList[i]
Error[i,2] <- mean(abs(p$mean - dt[test,i])/abs(dt[test,i]))*100
Error[i,3] <- mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/abs(dt[test,i]))*100
Error[i,4] <- mean(abs(apply(cbind(apply(cbind(p$upper[,2]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,2], 0),1,min)),1,min))/abs(dt[test,i]))*100
}
i <- 29
fit <- auto.arima(ts(dt[train,29], freq=freq, start = c(1994,4)), xreg = ts(dt[train,-c(29)], freq=freq, start = c(1994,4)), stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period, xreg=ts(dt[test,-c(29)], freq=freq, start = c(1994,4)))
jpeg(paste0('../Image/Forecasting_Target_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
Error[i,1] <- finFeatList[i]
Error[i,2] <- mean(abs(p$mean - dt[test,i])/abs(dt[test,i]))*100
Error[i,3] <- mean(abs(apply(cbind(apply(cbind(p$upper[,1]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,1], 0),1,min)),1,min))/abs(dt[test,i]))*100
Error[i,4] <- mean(abs(apply(cbind(apply(cbind(p$upper[,2]-dt[test,i], 0),1,min),apply(cbind(dt[test,i]-p$lower[,2], 0),1,min)),1,min))/abs(dt[test,i]))*100
write.csv(Error, file='../Document/Prediction_Error.csv', row.names = F)
fit <- auto.arima(ts(dt[train,29], freq=freq, start = c(1994,4)), xreg = ts(dt[train,-c(29)], freq=freq, start = c(1994,4)))#, stepwise=FALSE, approximation=FALSE)#
p <- forecast(fit, h=period, xreg=ts(dt[test,-c(29)], freq=freq, start = c(1994,4)))
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
jpeg(paste0('../Image/Forecasting_Target_Validation/',gsub("[^[:alnum:]]", "", finFeatList[i]),'_validation.jpg'),width=600, height=400)
plot(c(dt[,i]),type = 'l', xaxt='n',main = finFeatList[i],ylim=c(min(dt[,i],p$lower[,2]),max(dt[,i],p$upper[,2])), ylab=finFeatList[i]);
lines(c(rep(NA,length(dt[train,i])),p$lower[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$lower[,1]), col='orange');
lines(c(rep(NA,length(dt[train,i])),p$upper[,2]), col='blue');lines(c(rep(NA,length(dt[train,i])),p$upper[,1]), col='orange')
lines(c(rep(NA,length(dt[train,i])),p$mean), col='red')
axis(side=1,at=1:length(timeLine),label=timeLine)
dev.off()
fit <- auto.arima(ts(dt[train,29], freq=freq, start = c(1994,4)), xreg = ts(dt[train,-c(29)], freq=freq, start = c(1994,4)),list(maxit = 1000))#, stepwise=FALSE, approximation=FALSE)#
